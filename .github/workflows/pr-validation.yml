name: PR validation

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - main

permissions:
  contents: read

jobs:
  dependency-check:
    permissions:
      pull-requests: write
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # pin@v4.2.0
        with:
          persist-credentials: false
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
      - name: Checking dependencies for disallowed licenses
        uses: ./.github/actions/license-check
      - name: Review new dependencies
        uses: actions/dependency-review-action@5a2ce3f5b92ee19cbb1541a4984c76d921601d7c # pin@v4.3.4
        with:
          fail-on-severity: low
          fail-on-scopes: runtime
          license-check: false
          vulnerability-check: true
          comment-summary-in-pr: always
      - name: Checking dependencies for security issues
        run: pnpm audit
  format:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # pin@v4.2.0
        with:
          persist-credentials: false
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
      - name: Validate formatting
        run: pnpm format
  lint:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # pin@v4.2.0
        with:
          persist-credentials: false
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
      - name: Validate linting rules
        run: pnpm lint
  commitlint:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # pin@v4.2.0
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
      - name: Validate PR commits with commitlint
        run: pnpm commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose
  test:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # pin@v4.2.0
        with:
          persist-credentials: false
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
      - name: Test actions
        run: pnpm test:ci
  build:
    needs: [commitlint, dependency-check, format, lint, test]
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # pin@v4.2.0
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
      - name: Build
        run: pnpm build
      - name: Commit changes
        uses: EndBug/add-and-commit@a94899bca583c204427a224a7af87c02f9b325d5 # pin@v9.1.4
        with:
          author_name: ${{ github.event.pull_request.user.login }}
          author_email: ${{ github.event.pull_request.user.email }}
          message: "build: update build"
          add: "dist/**"
  e2e-test-unix:
    strategy:
      max-parallel: 1
      matrix:
        os:
          [
            ubuntu-20.04,
            ubuntu-22.04,
            ubuntu-24.04,
            macos-12,
            macos-13,
            macos-14,
          ]
    concurrency:
      group: e2e-test
      cancel-in-progress: false
    permissions:
      contents: write
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # pin@v4.2.0
      - name: Generate random files to upload
        run: |
          set -euo pipefail
          random_dir=$(openssl rand -base64 32 | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1)
          mkdir -p ./.github/e2e-test-dir/$random_dir
          echo "test" > ./.github/e2e-test-dir/$random_dir/file1.txt
          random_nested_dir=$(openssl rand -base64 32 | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1)
          mkdir -p ./.github/e2e-test-dir/$random_dir/$random_nested_dir
          echo "test" > ./.github/e2e-test-dir/$random_dir/$random_nested_dir/file2.txt
      - name: Deploy to Bunny
        uses: ./
        with:
          storage-zone-password: ${{ secrets.BUNNY_STORAGE_ZONE_PASSWORD }}
          directory-to-upload: "./.github/e2e-test-dir/"
          storage-endpoint: "https://storage.bunnycdn.com"
          storage-zone-name: "r-j-dev-bunny-deploy-test"
          concurrency: "50"
          enable-delete-action: true
          target-directory: "/e2e-test/"
  e2e-test-windows:
    strategy:
      max-parallel: 1
      matrix:
        os: [windows-2019, windows-2022]
    concurrency:
      group: e2e-test
      cancel-in-progress: false
    permissions:
      contents: write
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # pin@v4.2.0
      - name: Generate random files to upload
        run: |
          # This PowerShell command generates a random string of 10 characters consisting of both uppercase (A-Z) and lowercase (a-z) letters.
          # It first creates a range of ASCII values for uppercase (65..90) and lowercase (97..122) letters,
          # combines these ranges, selects 10 random values from this combined range,
          # and then converts each ASCII value to its corresponding character to form the string.
          $random_dir = -join ((65..90) + (97..122) | Get-Random -Count 10 | % {[char]$_})
          New-Item -ItemType Directory -Path ".\.github\e2e-test-dir\$random_dir"
          "test" | Out-File ".\.github\e2e-test-dir\$random_dir\file1.txt"
          $random_nested_dir = -join ((65..90) + (97..122) | Get-Random -Count 10 | % {[char]$_})
          New-Item -ItemType Directory -Path ".\.github\e2e-test-dir\$random_dir\$random_nested_dir"
          "test" | Out-File ".\.github\e2e-test-dir\$random_dir\$random_nested_dir\file2.txt"
      - name: Deploy to Bunny
        uses: ./
        with:
          storage-zone-password: ${{ secrets.BUNNY_STORAGE_ZONE_PASSWORD }}
          directory-to-upload: "./.github/e2e-test-dir/"
          storage-endpoint: "https://storage.bunnycdn.com"
          storage-zone-name: "r-j-dev-bunny-deploy-test"
          concurrency: "50"
          enable-delete-action: true
          target-directory: "/e2e-test/"
