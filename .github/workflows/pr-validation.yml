name: PR validation

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - main

permissions:
  contents: read

# TODO: add dependency review when this repo is public https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/configuring-dependency-review
jobs:
  license-check:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.6
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
      - name: Check all production licences
        run: pnpm license-checker-rseidelsohn --onlyAllow 'MIT' --production --excludePackages 'bunny-deploy@0.0.0-semantically-released'
  format:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.6
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
      - name: Validate formatting
        run: pnpm format
  lint:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.6
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
      - name: Validate linting rules
        run: pnpm lint
  test:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.6
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
      - name: Test actions
        run: pnpm test:ci
  build:
    needs: [license-check, format, lint, test]
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.6
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
      - name: Check dependencies for security issues
        run: pnpm audit
      - name: Build
        run: pnpm build
      - name: Commit changes
        uses: EndBug/add-and-commit@v9.1.4
        with:
          author_name: ${{ github.event.pull_request.user.login }}
          author_email: ${{ github.event.pull_request.user.email }}
          message: "build: update build"
          add: "dist/**"
  e2e-test:
    strategy:
      max-parallel: 1
      matrix:
        os: [ubuntu-24.04, ubuntu-22.04, ubuntu-20.04]
    concurrency:
      group: e2e-test
      cancel-in-progress: false
    permissions:
      contents: write
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.6
      - name: Generate random files to upload
        run: |
          set -euo pipefail
          random_dir=$(openssl rand -base64 32 | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1)
          mkdir -p ./.github/e2e-test-dir/$random_dir
          echo "test" > ./.github/e2e-test-dir/$random_dir/file1.txt
          random_nested_dir=$(openssl rand -base64 32 | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1)
          mkdir -p ./.github/e2e-test-dir/$random_dir/$random_nested_dir
          echo "test" > ./.github/e2e-test-dir/$random_dir/$random_nested_dir/file2.txt
      - name: Deploy to Bunny
        uses: ./
        with:
          storage-zone-password: ${{ secrets.BUNNY_STORAGE_ZONE_PASSWORD }}
          directory-to-upload: "./.github/e2e-test-dir/"
          storage-endpoint: "https://storage.bunnycdn.com"
          storage-zone-name: "r-j-dev-bunny-deploy-test"
          concurrency: "50"
          enable-delete-action: true
          target-directory: "/e2e-test/"
